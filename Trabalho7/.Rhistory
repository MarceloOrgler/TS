# inicializando:
mu[1] <- 0
y_mnl[1] <- mu[1] + epsilon[1]
#fazendo o loop para gerar y_mnl[2:T] e mu[2:T] :
for (t in 2:T) {
mu[t] <- mu[t - 1] + eta[t]
y_mnl[t] <- mu[t] + epsilon[t]
}
return(list('y_mnl'= y_mnl,'mu'=mu))}
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
y_mnl<-simul$y_mnl
mu<-simul$mu
#criando o dataframe com a séries:
data_mnl = data.frame("y_mnl"= y_mnl,'mu'=mu,'Tempo'=seq(1:100))
ggplot() +
geom_line(data=data_mnl, aes(x = Tempo, y = y_mnl),color = "black") +
geom_line(data=data_mnl, aes(x = Tempo, y = mu),color = "blue")+
labs(title = "Modelo de Nível Local (MNL)", y = "y_t, mu_t", x = "Tempo") +
theme_minimal()
library(pacman)
p_load(ggplot2)
simul_y_mnl <- function(T,sigma2_epsilon,sigma2_eta,n_seed) {
set.seed(n_seed)
# amostrando das normais:
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
# Modelo de nível local (MNL)
# criando os vetores mu e y_mnl ( serão preenchidos no próximo passo)
mu <- numeric(T)
y_mnl <- numeric(T)
# inicializando:
mu[1] <- 0
y_mnl[1] <- mu[1] + epsilon[1]
#fazendo o loop para gerar y_mnl[2:T] e mu[2:T] :
for (t in 2:T) {
mu[t] <- mu[t - 1] + eta[t]
y_mnl[t] <- mu[t] + epsilon[t]
}
return(list('y_mnl'= y_mnl,'mu'=mu))}
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
y_mnl<-simul$y_mnl
mu<-simul$mu
#criando o dataframe com a séries:
data_mnl = data.frame("y_mnl"= y_mnl,'mu'=mu,'Tempo'=seq(1:100))
ggplot() +
geom_line(data=data_mnl, aes(x = Tempo, y = y_mnl),color = "black") +
geom_line(data=data_mnl, aes(x = Tempo, y = mu),color = "blue")+
labs(title = "Modelo de Nível Local (MNL)", y = "y_t, mu_t", x = "Tempo") +
theme_minimal()
simul_y_mtl <- function(T,sigma2_epsilon,sigma2_eta,sigma2_qsi,n_seed){
simul_y_mtl <- function(T,sigma2_epsilon,sigma2_eta,sigma2_qsi,n_seed){
return(list('y_mtl'= y_mtl,'mu_mtl'=mu_mtl,'beta_mtl'=beta_mtl))}
simul_y_mtl <- function(T,sigma2_epsilon,sigma2_eta,sigma2_qsi,n_seed){
set.seed(n_seed)
# Modelo de Tendência Local (MTL)
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
qsi <- rnorm(T, mean = 0, sd = sqrt(sigma2_qsi))
# criando os vetores mu_tl, beta_tl e y_tl ( serão preenchidos no próximo passo)
mu_mtl <- numeric(T)
beta_mtl <- numeric(T)
y_mtl <- numeric(T)
# Inicialização
mu_mtl[1] <- 0
beta_mtl[1] <- 0
y_mtl[1] <- mu_mtl[1] + epsilon[1]
#fazendo o loop para gerar y_mtl[2:100], beta_tl[2:100] e mu_tl[2:100] :
for (t in 2:T) {
mu_mtl[t] <- mu_mtl[t - 1] + beta_mtl[t - 1] + eta[t]
beta_mtl[t] <- beta_mtl[t - 1] + qsi[t]
y_mtl[t] <- mu_mtl[t] + epsilon[t]
}
return(list('y_mtl'= y_mtl,'mu_mtl'=mu_mtl,'beta_mtl'=beta_mtl))}
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:100))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:100))
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:100))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
library(pacman)
p_load(ggplot2)
simul_y_mnl <- function(T,sigma2_epsilon,sigma2_eta,n_seed) {
set.seed(n_seed)
# amostrando das normais:
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
# Modelo de nível local (MNL)
# criando os vetores mu e y_mnl ( serão preenchidos no próximo passo)
mu <- numeric(T)
y_mnl <- numeric(T)
# inicializando:
mu[1] <- 0
y_mnl[1] <- mu[1] + epsilon[1]
#fazendo o loop para gerar y_mnl[2:T] e mu[2:T] :
for (t in 2:T) {
mu[t] <- mu[t - 1] + eta[t]
y_mnl[t] <- mu[t] + epsilon[t]
}
return(list('y_mnl'= y_mnl,'mu'=mu))}
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
y_mnl<-simul$y_mnl
mu<-simul$mu
#criando o dataframe com a séries:
data_mnl = data.frame("y_mnl"= y_mnl,'mu'=mu,'Tempo'=seq(1:100))
ggplot() +
geom_line(data=data_mnl, aes(x = Tempo, y = y_mnl),color = "black") +
geom_line(data=data_mnl, aes(x = Tempo, y = mu),color = "blue")+
labs(title = "Modelo de Nível Local (MNL)", y = "y_t, mu_t", x = "Tempo") +
theme_minimal()
simul_y_mtl <- function(T,sigma2_epsilon,sigma2_eta,sigma2_qsi,n_seed){
set.seed(n_seed)
# Modelo de Tendência Local (MTL)
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
qsi <- rnorm(T, mean = 0, sd = sqrt(sigma2_qsi))
# criando os vetores mu_tl, beta_tl e y_tl ( serão preenchidos no próximo passo)
mu_mtl <- numeric(T)
beta_mtl <- numeric(T)
y_mtl <- numeric(T)
# Inicialização
mu_mtl[1] <- 0
beta_mtl[1] <- 0
y_mtl[1] <- mu_mtl[1] + epsilon[1]
#fazendo o loop para gerar y_mtl[2:100], beta_tl[2:100] e mu_tl[2:100] :
for (t in 2:T) {
mu_mtl[t] <- mu_mtl[t - 1] + beta_mtl[t - 1] + eta[t]
beta_mtl[t] <- beta_mtl[t - 1] + qsi[t]
y_mtl[t] <- mu_mtl[t] + epsilon[t]
}
return(list('y_mtl'= y_mtl,'mu_mtl'=mu_mtl,'beta_mtl'=beta_mtl))}
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
library(pacman)
p_load(ggplot2)
simul_y_mnl <- function(T,sigma2_epsilon,sigma2_eta,n_seed) {
set.seed(n_seed)
# amostrando das normais:
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
# Modelo de nível local (MNL)
# criando os vetores mu e y_mnl ( serão preenchidos no próximo passo)
mu <- numeric(T)
y_mnl <- numeric(T)
# inicializando:
mu[1] <- 0
y_mnl[1] <- mu[1] + epsilon[1]
#fazendo o loop para gerar y_mnl[2:T] e mu[2:T] :
for (t in 2:T) {
mu[t] <- mu[t - 1] + eta[t]
y_mnl[t] <- mu[t] + epsilon[t]
}
return(list('y_mnl'= y_mnl,'mu'=mu))}
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
y_mnl<-simul$y_mnl
mu<-simul$mu
#criando o dataframe com a séries:
data_mnl = data.frame("y_mnl"= y_mnl,'mu'=mu,'Tempo'=seq(1:100))
ggplot() +
geom_line(data=data_mnl, aes(x = Tempo, y = y_mnl),color = "black") +
geom_line(data=data_mnl, aes(x = Tempo, y = mu),color = "blue")+
labs(title = "Modelo de Nível Local (MNL)", y = "y_t, mu_t", x = "Tempo") +
theme_minimal()
simul_y_mtl <- function(T,sigma2_epsilon,sigma2_eta,sigma2_qsi,n_seed){
set.seed(n_seed)
# Modelo de Tendência Local (MTL)
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
qsi <- rnorm(T, mean = 0, sd = sqrt(sigma2_qsi))
# criando os vetores mu_tl, beta_tl e y_tl ( serão preenchidos no próximo passo)
mu_mtl <- numeric(T)
beta_mtl <- numeric(T)
y_mtl <- numeric(T)
# Inicialização
mu_mtl[1] <- 0
beta_mtl[1] <- 0
y_mtl[1] <- mu_mtl[1] + epsilon[1]
#fazendo o loop para gerar y_mtl[2:100], beta_tl[2:100] e mu_tl[2:100] :
for (t in 2:T) {
mu_mtl[t] <- mu_mtl[t - 1] + beta_mtl[t - 1] + eta[t]
beta_mtl[t] <- beta_mtl[t - 1] + qsi[t]
y_mtl[t] <- mu_mtl[t] + epsilon[t]
}
return(list('y_mtl'= y_mtl,'mu_mtl'=mu_mtl,'beta_mtl'=beta_mtl))}
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
simul_mtl <- simul_y_mtl(T=100,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
simul_mtl$y_mtl
View(data_mtl)
View(data_mtl)
T=100
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
a  <- numeric(T)
mnl_fk
mnl_fk <- function(T,sigma_epsilon2,sigma_eta2,a0,p0){
a  <- numeric(T)
P  <- numeric(T)
at <- numeric(T)
Pt <- numeric(T)
K <- numeric(T)
F  <- numeric(T)
y_tilda_t<- numeric(T)
# Inicialização do filtro
a[1] <- a0
P[1] <- p0
y_tilda_t[1]<-a[1]
Pt[1]=P[1] + sigma_eta2
F[1]=Pt[1]+sigma_epsilon2
for (t in 2:T) {
#priori de alpha_t:
at[t]=a[t-1]
Pt[t]=P[t-1] + sigma_eta2
#preditiva de y_t:
y_tilda_t[t] <- at[t]
F[t]=Pt[t]+sigma_epsilon2
#posteriori de alpha_t:
a[t]=at[t] + Pt[t]/F[t]*(y_mnl[t]-y_tilda_t[t])
P[t]=Pt[t] - Pt[t]^2/F[t]
}
return(list('a'=a,'Ft'=F))}
fk<-mnl_fk(T=100,sigma_epsilon2 = 1,sigma_eta2 = 0.5,a0=0,p0=1)
data_fk = data.frame("at"= a,'Ft'=F,'Tempo'=seq(1:100))
ggplot(data_fk, aes(x = Tempo, y = at)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "a", x = "Tempo") +
theme_minimal()
ggplot(data_fk, aes(x = Tempo, y = Ft)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "Ft", x = "Tempo") +
theme_minimal()
fk<-mnl_fk(T=T,sigma_epsilon2 = 1,sigma_eta2 = 0.5,a0=0,p0=1)
data_fk = data.frame("at"= a,'Ft'=F,'Tempo'=seq(1:100))
ggplot(data_fk, aes(x = Tempo, y = at)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "a", x = "Tempo") +
theme_minimal()
ggplot(data_fk, aes(x = Tempo, y = Ft)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "Ft", x = "Tempo") +
theme_minimal()
fk<-mnl_fk(T=T,sigma_epsilon2 = 1,sigma_eta2 = 0.5,a0=0,p0=1)
data_fk = data.frame("at"= fk$a,'Ft'=fk$F,'Tempo'=seq(1:100))
ggplot(data_fk, aes(x = Tempo, y = at)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "a", x = "Tempo") +
theme_minimal()
ggplot(data_fk, aes(x = Tempo, y = Ft)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "Ft", x = "Tempo") +
theme_minimal()
rm(list=ls())
library(pacman)
p_load(ggplot2)
simul_y_mnl <- function(T,sigma2_epsilon,sigma2_eta,n_seed) {
set.seed(n_seed)
# amostrando das normais:
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
# Modelo de nível local (MNL)
# criando os vetores mu e y_mnl ( serão preenchidos no próximo passo)
mu <- numeric(T)
y_mnl <- numeric(T)
# inicializando:
mu[1] <- 0
y_mnl[1] <- mu[1] + epsilon[1]
#fazendo o loop para gerar y_mnl[2:T] e mu[2:T] :
for (t in 2:T) {
mu[t] <- mu[t - 1] + eta[t]
y_mnl[t] <- mu[t] + epsilon[t]
}
return(list('y_mnl'= y_mnl,'mu'=mu))}
simul<- simul_y_mnl(T=100,sigma2_epsilon = 1,sigma2_eta = 0.5,n_seed = 1)
y_mnl<-simul$y_mnl
mu<-simul$mu
#criando o dataframe com a séries:
data_mnl = data.frame("y_mnl"= y_mnl,'mu'=mu,'Tempo'=seq(1:100))
ggplot() +
geom_line(data=data_mnl, aes(x = Tempo, y = y_mnl),color = "black") +
geom_line(data=data_mnl, aes(x = Tempo, y = mu),color = "blue")+
labs(title = "Modelo de Nível Local (MNL)", y = "y_t, mu_t", x = "Tempo") +
theme_minimal()
simul_y_mtl <- function(T,sigma2_epsilon,sigma2_eta,sigma2_qsi,n_seed){
set.seed(n_seed)
# Modelo de Tendência Local (MTL)
epsilon <- rnorm(T, mean = 0, sd = sqrt(sigma2_epsilon))
eta <- rnorm(T, mean = 0, sd = sqrt(sigma2_eta))
qsi <- rnorm(T, mean = 0, sd = sqrt(sigma2_qsi))
# criando os vetores mu_tl, beta_tl e y_tl ( serão preenchidos no próximo passo)
mu_mtl <- numeric(T)
beta_mtl <- numeric(T)
y_mtl <- numeric(T)
# Inicialização
mu_mtl[1] <- 0
beta_mtl[1] <- 0
y_mtl[1] <- mu_mtl[1] + epsilon[1]
#fazendo o loop para gerar y_mtl[2:100], beta_tl[2:100] e mu_tl[2:100] :
for (t in 2:T) {
mu_mtl[t] <- mu_mtl[t - 1] + beta_mtl[t - 1] + eta[t]
beta_mtl[t] <- beta_mtl[t - 1] + qsi[t]
y_mtl[t] <- mu_mtl[t] + epsilon[t]
}
return(list('y_mtl'= y_mtl,'mu_mtl'=mu_mtl,'beta_mtl'=beta_mtl))}
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "black") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
T=100
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "black") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "red") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=10,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "black") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "black") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
simul_mtl <- simul_y_mtl(T=T,sigma2_epsilon=1,sigma2_eta=0.5,sigma2_qsi=0.5,n_seed=1)
data_mtl = data.frame("y_mtl"= simul_mtl$y_mtl,'mu_mtl'=simul_mtl$mu_mtl,'beta_mtl'=simul_mtl$beta_mtl,'Tempo'=seq(1:T))
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "black") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "red") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = y_mtl)) +
geom_line(color = "black") +
labs(title = "Modelo (MTL)", y = "y_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = mu_mtl)) +
geom_line(color = "blue") +
labs(title = "Modelo (MTL)", y = "mu_t", x = "Tempo") +
theme_minimal()
ggplot(data_mtl, aes(x = Tempo, y = beta_mtl)) +
geom_line(color = "red") +
labs(title = "Modelo (MTL)", y = "beta_mtl", x = "Tempo") +
theme_minimal()
ggplot(data_fk, aes(x = Tempo, y = at)) +
geom_line(color = "black") +
labs(title = "FK (MNL)", y = "a", x = "Tempo") +
theme_minimal()
fk<-mnl_fk(T=T,sigma_epsilon2 = 1,sigma_eta2 = 0.5,a0=0,p0=1)
data_fk = data.frame("at"= fk$a,'Ft'=fk$F,'Tempo'=seq(1:100))
mnl_fk <- function(T,sigma_epsilon2,sigma_eta2,a0,p0){
a  <- numeric(T)
P  <- numeric(T)
at <- numeric(T)
Pt <- numeric(T)
K <- numeric(T)
F  <- numeric(T)
y_tilda_t<- numeric(T)
# Inicialização do filtro
a[1] <- a0
P[1] <- p0
y_tilda_t[1]<-a[1]
Pt[1]=P[1] + sigma_eta2
F[1]=Pt[1]+sigma_epsilon2
for (t in 2:T) {
#priori de alpha_t:
at[t]=a[t-1]
Pt[t]=P[t-1] + sigma_eta2
#preditiva de y_t:
y_tilda_t[t] <- at[t]
F[t]=Pt[t]+sigma_epsilon2
#posteriori de alpha_t:
a[t]=at[t] + Pt[t]/F[t]*(y_mnl[t]-y_tilda_t[t])
P[t]=Pt[t] - Pt[t]^2/F[t]
}
return(list('a'=a,'Ft'=F))}
fk<-mnl_fk(T=T,sigma_epsilon2 = 1,sigma_eta2 = 0.5,a0=0,p0=1)
data_fk = data.frame("at"= fk$a,'Ft'=fk$F,'Tempo'=seq(1:100))
ggplot(data_fk, aes(x = Tempo, y = at)) +
geom_line(color = "black") +
labs(title = "FK (MNL)", y = "a", x = "Tempo") +
theme_minimal()
ggplot(data_fk, aes(x = Tempo, y = Ft)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "Ft", x = "Tempo") +
theme_minimal()
?StructTS
mnl_fk <- function(T,y_mnl, sigma_epsilon2, sigma_eta2, a0, p0) {
# Initialize vectors
a  <- numeric(T)  # Posterior mean of state
P  <- numeric(T)  # Posterior variance of state
at <- numeric(T)  # Prior mean of state
Pt <- numeric(T)  # Prior variance of state
F  <- numeric(T)  # Predictive variance
K  <- numeric(T)  # Kalman gain
y_tilda <- numeric(T)  # Predicted observation
v_t<-numeric(T)
# Initial values
a[1] <- a0
P[1] <- p0
for (t in 1:T) {
# Prediction step
if (t > 1) {
at[t] <- a[t - 1]  # Prior mean (at|t-1)
Pt[t] <- P[t - 1] + sigma_eta2  # Prior variance (Pt|t-1)
} else {
at[t] <- a0
Pt[t] <- p0
}
# Observation prediction
y_tilda[t] <- at[t]  # Predicted observation
F[t] <- Pt[t] + sigma_epsilon2  # Predictive variance
# Kalman gain
K[t] <- Pt[t] / F[t]
v_t[t]<-(y_mnl[t] - y_tilda[t])
# Update step
a[t] <- at[t] + K[t] * v_t[t]  # Posterior mean
P[t] <- Pt[t] - K[t] * Pt[t]  # Posterior variance
}
return(list(a = a, F = F, v_t = v_t))
}
fk<-mnl_fk(T=T,sigma_epsilon2 = 1,sigma_eta2 = 0.5,a0=0,p0=1)
data_fk = data.frame("at"= fk$a,'Ft'=fk$F,'Tempo'=seq(1:100))
ggplot(data_fk, aes(x = Tempo, y = at)) +
geom_line(color = "black") +
labs(title = "FK (MNL)", y = "a", x = "Tempo") +
theme_minimal()
ggplot(data_fk, aes(x = Tempo, y = Ft)) +
geom_line(color = "blue") +
labs(title = "FK (MNL)", y = "Ft", x = "Tempo") +
theme_minimal()
library(pacman)
p_load(ggplot2,NGSSEML)
library(packman)
library(pacman)
p_load(dplyr,Splines)
p_load(dplyr,splines)
p_load(dplyr,splines)
library(pacman)
p_load(dplyr,splines)
library(pacman)
p_load(dplyr,tidyr,splines,glarma)
setwd('C:\\Users\\Marcelo\\OneDrive\\Área de Trabalho\\ts\\trabalho 2 - TS\\Trabalho7')
getwd()
